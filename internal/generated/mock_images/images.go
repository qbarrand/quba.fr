// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qbarrand/quba.fr/data/images (interfaces: MetadataFS)

// Package mock_images is a generated GoMock package.
package mock_images

import (
	fs "io/fs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	images "github.com/qbarrand/quba.fr/data/images"
)

// MockMetadataFS is a mock of MetadataFS interface.
type MockMetadataFS struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataFSMockRecorder
}

// MockMetadataFSMockRecorder is the mock recorder for MockMetadataFS.
type MockMetadataFSMockRecorder struct {
	mock *MockMetadataFS
}

// NewMockMetadataFS creates a new mock instance.
func NewMockMetadataFS(ctrl *gomock.Controller) *MockMetadataFS {
	mock := &MockMetadataFS{ctrl: ctrl}
	mock.recorder = &MockMetadataFSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataFS) EXPECT() *MockMetadataFSMockRecorder {
	return m.recorder
}

// Open mocks base method.
func (m *MockMetadataFS) Open(arg0 string) (fs.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Open", arg0)
	ret0, _ := ret[0].(fs.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Open indicates an expected call of Open.
func (mr *MockMetadataFSMockRecorder) Open(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Open", reflect.TypeOf((*MockMetadataFS)(nil).Open), arg0)
}

// OpenWithMetadata mocks base method.
func (m *MockMetadataFS) OpenWithMetadata(arg0 string) (fs.File, *images.Metadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenWithMetadata", arg0)
	ret0, _ := ret[0].(fs.File)
	ret1, _ := ret[1].(*images.Metadata)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// OpenWithMetadata indicates an expected call of OpenWithMetadata.
func (mr *MockMetadataFSMockRecorder) OpenWithMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenWithMetadata", reflect.TypeOf((*MockMetadataFS)(nil).OpenWithMetadata), arg0)
}
